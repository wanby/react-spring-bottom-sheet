{"version":3,"file":"index.modern.js","sources":["../src/hooks/useLayoutEffect.tsx","../src/utils.ts","../src/hooks/useSnapPoints.tsx","../src/machines/overlay.ts","../src/BottomSheet.tsx","../src/hooks/useReady.tsx","../src/hooks/useSpring.tsx","../src/hooks/useReducedMotion.tsx","../src/hooks/useScrollLock.tsx","../src/hooks/useAriaHider.tsx","../src/hooks/useFocusTrap.tsx","../src/hooks/useSpringInterpolations.tsx","../src/index.tsx"],"sourcesContent":["import { useEffect, useLayoutEffect as useLayoutEffectSafely } from 'react'\r\n\r\n// Ensure the name used in components is useLayoutEffect so the eslint react hooks plugin works\r\nexport const useLayoutEffect =\r\n  typeof window !== 'undefined' ? useLayoutEffectSafely : useEffect\r\n","/* eslint-disable no-self-compare */\r\n\r\n// stolen from lodash\r\nexport function clamp(number: number, lower: number, upper: number) {\r\n  number = +number\r\n  lower = +lower\r\n  upper = +upper\r\n  lower = lower === lower ? lower : 0\r\n  upper = upper === upper ? upper : 0\r\n  if (number === number) {\r\n    number = number <= upper ? number : upper\r\n    number = number >= lower ? number : lower\r\n  }\r\n  return number\r\n}\r\n\r\n// Mwahaha easiest way to filter out NaN I ever saw! >:3\r\nexport function deleteNaN(arr) {\r\n  const set = new Set(arr)\r\n  set.delete(NaN)\r\n  return [...set]\r\n}\r\n\r\nexport function roundAndCheckForNaN(unrounded) {\r\n  const rounded = Math.round(unrounded)\r\n  if (Number.isNaN(unrounded)) {\r\n    throw new TypeError(\r\n      'Found a NaN! Check your snapPoints / defaultSnap / snapTo '\r\n    )\r\n  }\r\n\r\n  return rounded\r\n}\r\n\r\n// Validate, sanitize, round and dedupe snap points, as well as extracting the minSnap and maxSnap points\r\nexport function processSnapPoints(unsafeSnaps: number | number[], maxHeight) {\r\n  const safeSnaps = [].concat(unsafeSnaps).map(roundAndCheckForNaN)\r\n\r\n  const snapPointsDedupedSet = safeSnaps.reduce((acc, snapPoint) => {\r\n    acc.add(clamp(snapPoint, 0, maxHeight))\r\n    return acc\r\n  }, new Set<number>())\r\n\r\n  const snapPoints = Array.from(snapPointsDedupedSet)\r\n\r\n  const minSnap = Math.min(...snapPoints)\r\n  if (Number.isNaN(minSnap)) {\r\n    throw new TypeError('minSnap is NaN')\r\n  }\r\n  const maxSnap = Math.max(...snapPoints)\r\n  if (Number.isNaN(maxSnap)) {\r\n    throw new TypeError('maxSnap is NaN')\r\n  }\r\n\r\n  return {\r\n    snapPoints,\r\n    minSnap,\r\n    maxSnap,\r\n  }\r\n}\r\n\r\nexport const debugging =\r\n  process.env.NODE_ENV === 'development' && typeof window !== 'undefined'\r\n    ? window.location.search === '?debug'\r\n    : false\r\n","import React, {\r\n  useCallback,\r\n  useDebugValue,\r\n  useEffect,\r\n  useMemo,\r\n  useRef,\r\n  useState,\r\n} from 'react'\r\nimport { ResizeObserver, ResizeObserverEntry } from '@juggle/resize-observer'\r\nimport type { defaultSnapProps, ResizeSource, snapPoints } from '../types'\r\nimport { processSnapPoints, roundAndCheckForNaN } from '../utils'\r\nimport { useReady } from './useReady'\r\nimport { ResizeObserverOptions } from '@juggle/resize-observer/lib/ResizeObserverOptions'\r\nimport { useLayoutEffect } from './useLayoutEffect'\r\n\r\nexport function useSnapPoints({\r\n  contentRef,\r\n  controlledMaxHeight,\r\n  footerEnabled,\r\n  footerRef,\r\n  getSnapPoints,\r\n  headerEnabled,\r\n  headerRef,\r\n  heightRef,\r\n  lastSnapRef,\r\n  ready,\r\n  registerReady,\r\n  resizeSourceRef,\r\n}: {\r\n  contentRef: React.RefObject<Element>\r\n  controlledMaxHeight?: number\r\n  footerEnabled: boolean\r\n  footerRef: React.RefObject<Element>\r\n  getSnapPoints: snapPoints\r\n  headerEnabled: boolean\r\n  headerRef: React.RefObject<Element>\r\n  heightRef: React.RefObject<number>\r\n  lastSnapRef: React.RefObject<number>\r\n  ready: boolean\r\n  registerReady: ReturnType<typeof useReady>['registerReady']\r\n  resizeSourceRef: React.MutableRefObject<ResizeSource>\r\n}) {\r\n  const { maxHeight, minHeight, headerHeight, footerHeight } = useDimensions({\r\n    contentRef: contentRef,\r\n    controlledMaxHeight,\r\n    footerEnabled,\r\n    footerRef,\r\n    headerEnabled,\r\n    headerRef,\r\n    registerReady,\r\n    resizeSourceRef,\r\n  })\r\n\r\n  const { snapPoints, minSnap, maxSnap } = processSnapPoints(\r\n    ready\r\n      ? getSnapPoints({\r\n          height: heightRef.current,\r\n          footerHeight,\r\n          headerHeight,\r\n          minHeight,\r\n          maxHeight,\r\n        })\r\n      : [0],\r\n    maxHeight\r\n  )\r\n  //console.log({ snapPoints, minSnap, maxSnap })\r\n\r\n  // @TODO investigate the gains from memoizing this\r\n  function findSnap(\r\n    numberOrCallback: number | ((state: defaultSnapProps) => number)\r\n  ) {\r\n    let unsafeSearch: number\r\n    if (typeof numberOrCallback === 'function') {\r\n      unsafeSearch = numberOrCallback({\r\n        footerHeight,\r\n        headerHeight,\r\n        height: heightRef.current,\r\n        minHeight,\r\n        maxHeight,\r\n        snapPoints,\r\n        lastSnap: lastSnapRef.current,\r\n      })\r\n    } else {\r\n      unsafeSearch = numberOrCallback\r\n    }\r\n    const querySnap = roundAndCheckForNaN(unsafeSearch)\r\n    return snapPoints.reduce(\r\n      (prev, curr) =>\r\n        Math.abs(curr - querySnap) < Math.abs(prev - querySnap) ? curr : prev,\r\n      minSnap\r\n    )\r\n  }\r\n\r\n  useDebugValue(`minSnap: ${minSnap}, maxSnap:${maxSnap}`)\r\n\r\n  return { minSnap, maxSnap, findSnap, maxHeight }\r\n}\r\n\r\nfunction useDimensions({\r\n  contentRef,\r\n  controlledMaxHeight,\r\n  footerEnabled,\r\n  footerRef,\r\n  headerEnabled,\r\n  headerRef,\r\n  registerReady,\r\n  resizeSourceRef,\r\n}: {\r\n  contentRef: React.RefObject<Element>\r\n  controlledMaxHeight?: number\r\n  footerEnabled: boolean\r\n  footerRef: React.RefObject<Element>\r\n  headerEnabled: boolean\r\n  headerRef: React.RefObject<Element>\r\n  registerReady: ReturnType<typeof useReady>['registerReady']\r\n  resizeSourceRef: React.MutableRefObject<ResizeSource>\r\n}) {\r\n  const setReady = useMemo(() => registerReady('contentHeight'), [\r\n    registerReady,\r\n  ])\r\n  const maxHeight = useMaxHeight(\r\n    controlledMaxHeight,\r\n    registerReady,\r\n    resizeSourceRef\r\n  )\r\n\r\n  // @TODO probably better to forward props instead of checking refs to decide if it's enabled\r\n  const headerHeight = useElementSizeObserver(headerRef, {\r\n    label: 'headerHeight',\r\n    enabled: headerEnabled,\r\n    resizeSourceRef,\r\n  })\r\n  const contentHeight = useElementSizeObserver(contentRef, {\r\n    label: 'contentHeight',\r\n    enabled: true,\r\n    resizeSourceRef,\r\n  })\r\n  const footerHeight = useElementSizeObserver(footerRef, {\r\n    label: 'footerHeight',\r\n    enabled: footerEnabled,\r\n    resizeSourceRef,\r\n  })\r\n  const minHeight =\r\n    Math.min(maxHeight - headerHeight - footerHeight, contentHeight) +\r\n    headerHeight +\r\n    footerHeight\r\n\r\n  useDebugValue(`minHeight: ${minHeight}`)\r\n\r\n  const ready = contentHeight > 0\r\n  useEffect(() => {\r\n    if (ready) {\r\n      setReady()\r\n    }\r\n  }, [ready, setReady])\r\n\r\n  return {\r\n    maxHeight,\r\n    minHeight,\r\n    headerHeight,\r\n    footerHeight,\r\n  }\r\n}\r\n\r\nconst observerOptions: ResizeObserverOptions = {\r\n  // Respond to changes to padding, happens often on iOS when using env(safe-area-inset-bottom)\r\n  // And the user hides or shows the Safari browser toolbar\r\n  box: 'border-box',\r\n}\r\n/**\r\n * Hook for determining the size of an element using the Resize Observer API.\r\n *\r\n * @param ref - A React ref to an element\r\n */\r\nfunction useElementSizeObserver(\r\n  ref: React.RefObject<Element>,\r\n  {\r\n    label,\r\n    enabled,\r\n    resizeSourceRef,\r\n  }: {\r\n    label: string\r\n    enabled: boolean\r\n    resizeSourceRef: React.MutableRefObject<ResizeSource>\r\n  }\r\n): number {\r\n  let [size, setSize] = useState(0)\r\n\r\n  useDebugValue(`${label}: ${size}`)\r\n\r\n  const handleResize = useCallback(\r\n    (entries: ResizeObserverEntry[]) => {\r\n      // we only observe one element, so accessing the first entry here is fine\r\n      setSize(entries[0].borderBoxSize[0].blockSize)\r\n      resizeSourceRef.current = 'element'\r\n    },\r\n    [resizeSourceRef]\r\n  )\r\n\r\n  useLayoutEffect(() => {\r\n    if (!ref.current || !enabled) {\r\n      return\r\n    }\r\n\r\n    const resizeObserver = new ResizeObserver(handleResize)\r\n    resizeObserver.observe(ref.current, observerOptions)\r\n\r\n    return () => {\r\n      resizeObserver.disconnect()\r\n    }\r\n  }, [ref, handleResize, enabled])\r\n\r\n  return enabled ? size : 0\r\n}\r\n\r\n// Blazingly keep track of the current viewport height without blocking the thread, keeping that sweet 60fps on smartphones\r\nfunction useMaxHeight(\r\n  controlledMaxHeight,\r\n  registerReady: ReturnType<typeof useReady>['registerReady'],\r\n  resizeSourceRef: React.MutableRefObject<ResizeSource>\r\n) {\r\n  const setReady = useMemo(() => registerReady('maxHeight'), [registerReady])\r\n  const [maxHeight, setMaxHeight] = useState(() =>\r\n    roundAndCheckForNaN(controlledMaxHeight) || typeof window !== 'undefined'\r\n      ? window.innerHeight\r\n      : 0\r\n  )\r\n  const ready = maxHeight > 0\r\n  const raf = useRef(0)\r\n\r\n  useDebugValue(controlledMaxHeight ? 'controlled' : 'auto')\r\n\r\n  useEffect(() => {\r\n    if (ready) {\r\n      setReady()\r\n    }\r\n  }, [ready, setReady])\r\n\r\n  useLayoutEffect(() => {\r\n    // Bail if the max height is a controlled prop\r\n    if (controlledMaxHeight) {\r\n      setMaxHeight(roundAndCheckForNaN(controlledMaxHeight))\r\n      resizeSourceRef.current = 'maxheightprop'\r\n\r\n      return\r\n    }\r\n\r\n    const handleResize = () => {\r\n      if (raf.current) {\r\n        // bail to throttle the amount of resize changes\r\n        return\r\n      }\r\n\r\n      // throttle state changes using rAF\r\n      raf.current = requestAnimationFrame(() => {\r\n        setMaxHeight(window.innerHeight)\r\n        resizeSourceRef.current = 'window'\r\n\r\n        raf.current = 0\r\n      })\r\n    }\r\n    window.addEventListener('resize', handleResize)\r\n    setMaxHeight(window.innerHeight)\r\n    resizeSourceRef.current = 'window'\r\n    setReady()\r\n\r\n    return () => {\r\n      window.removeEventListener('resize', handleResize)\r\n      cancelAnimationFrame(raf.current)\r\n    }\r\n  }, [controlledMaxHeight, setReady, resizeSourceRef])\r\n\r\n  return maxHeight\r\n}\r\n","import { Machine, assign } from 'xstate'\r\n\r\n// This is the root machine, composing all the other machines and is the brain of the bottom sheet\r\n\r\ninterface OverlayStateSchema {\r\n  states: {\r\n    // the overlay usually starts in the closed position\r\n    closed: {}\r\n    opening: {\r\n      states: {\r\n        // Used to fire off the springStart event\r\n        start: {}\r\n        // Decide how to transition to the open state based on what the initialState is\r\n        transition: {}\r\n        // Fast enter animation, sheet is open by default\r\n        immediately: {\r\n          states: {\r\n            open: {}\r\n            activating: {}\r\n          }\r\n        }\r\n        smoothly: {\r\n          states: {\r\n            // This state only happens when the overlay should start in an open state, instead of animating from the bottom\r\n            // openImmediately: {}\r\n            // visuallyHidden will render the overlay in the open state, but with opacity 0\r\n            // doing this solves two problems:\r\n            // on Android focusing an input element will trigger the softkeyboard to show up, which will change the viewport height\r\n            // on iOS the focus event will break the view by triggering a scrollIntoView event if focus happens while the overlay is below the viewport and body got overflow:hidden\r\n            // by rendering things with opacity 0 we ensure keyboards and scrollIntoView all happen in a way that match up with what the sheet will look like.\r\n            // we can then move it to the opening position below the viewport, and animate it into view without worrying about height changes or scrolling overflow:hidden events\r\n            visuallyHidden: {}\r\n            // In this state we're activating focus traps, scroll locks and more, this will sometimes trigger soft keyboards and scrollIntoView\r\n            // @TODO we might want to add a delay here before proceeding to open, to give android and iOS enough time to adjust the viewport when focusing an interactive element\r\n            activating: {}\r\n            // Animates from the bottom\r\n            open: {}\r\n          }\r\n        }\r\n        // Used to fire off the springEnd event\r\n        end: {}\r\n        // And finally we're ready to transition to open\r\n        done: {}\r\n      }\r\n    }\r\n    open: {}\r\n    // dragging responds to user gestures, which may interrupt the opening state, closing state or snapping\r\n    // when interrupting an opening event, it fires onSpringEnd(OPEN) before onSpringStart(DRAG)\r\n    // when interrupting a closing event, it fires onSpringCancel(CLOSE) before onSpringStart(DRAG)\r\n    // when interrupting a dragging event, it fires onSpringCancel(SNAP) before onSpringStart(DRAG)\r\n    dragging: {}\r\n    // snapping happens whenever transitioning to a new snap point, often after dragging\r\n    snapping: {\r\n      states: {\r\n        start: {}\r\n        snappingSmoothly: {}\r\n        end: {}\r\n        done: {}\r\n      }\r\n    }\r\n    resizing: {\r\n      states: {\r\n        start: {}\r\n        resizingSmoothly: {}\r\n        end: {}\r\n        done: {}\r\n      }\r\n    }\r\n    closing: {\r\n      states: {\r\n        start: {}\r\n        deactivating: {}\r\n        closingSmoothly: {}\r\n        end: {}\r\n        done: {}\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\ntype OverlayEvent =\r\n  | { type: 'OPEN' }\r\n  | {\r\n      type: 'SNAP'\r\n      payload: {\r\n        y: number\r\n        velocity: number\r\n        source: 'dragging' | 'custom' | string\r\n      }\r\n    }\r\n  | { type: 'CLOSE' }\r\n  | { type: 'DRAG' }\r\n  | { type: 'RESIZE' }\r\n\r\n// The context (extended state) of the machine\r\ninterface OverlayContext {\r\n  initialState: 'OPEN' | 'CLOSED'\r\n}\r\nfunction sleep(ms = 1000) {\r\n  return new Promise((resolve) => setTimeout(resolve, ms))\r\n}\r\n\r\nconst cancelOpen = {\r\n  CLOSE: { target: '#overlay.closing', actions: 'onOpenCancel' },\r\n}\r\nconst openToDrag = {\r\n  DRAG: { target: '#overlay.dragging', actions: 'onOpenEnd' },\r\n}\r\nconst openToResize = {\r\n  RESIZE: { target: '#overlay.resizing', actions: 'onOpenEnd' },\r\n}\r\n\r\nconst initiallyOpen = ({ initialState }) => initialState === 'OPEN'\r\nconst initiallyClosed = ({ initialState }) => initialState === 'CLOSED'\r\n\r\n// Copy paste the machine into https://xstate.js.org/viz/ to make sense of what's going on in here ;)\r\n\r\nexport const overlayMachine = Machine<\r\n  OverlayContext,\r\n  OverlayStateSchema,\r\n  OverlayEvent\r\n>(\r\n  {\r\n    id: 'overlay',\r\n    initial: 'closed',\r\n    context: { initialState: 'CLOSED' },\r\n    states: {\r\n      closed: { on: { OPEN: 'opening', CLOSE: undefined } },\r\n      opening: {\r\n        initial: 'start',\r\n        states: {\r\n          start: {\r\n            invoke: {\r\n              src: 'onOpenStart',\r\n              onDone: 'transition',\r\n            },\r\n          },\r\n          transition: {\r\n            always: [\r\n              { target: 'immediately', cond: 'initiallyOpen' },\r\n              { target: 'smoothly', cond: 'initiallyClosed' },\r\n            ],\r\n          },\r\n          immediately: {\r\n            initial: 'open',\r\n            states: {\r\n              open: {\r\n                invoke: { src: 'openImmediately', onDone: 'activating' },\r\n              },\r\n              activating: {\r\n                invoke: { src: 'activate', onDone: '#overlay.opening.end' },\r\n                on: { ...openToDrag, ...openToResize },\r\n              },\r\n            },\r\n          },\r\n          smoothly: {\r\n            initial: 'visuallyHidden',\r\n            states: {\r\n              visuallyHidden: {\r\n                invoke: { src: 'renderVisuallyHidden', onDone: 'activating' },\r\n              },\r\n              activating: {\r\n                invoke: { src: 'activate', onDone: 'open' },\r\n              },\r\n              open: {\r\n                invoke: { src: 'openSmoothly', onDone: '#overlay.opening.end' },\r\n                on: { ...openToDrag, ...openToResize },\r\n              },\r\n            },\r\n          },\r\n          end: {\r\n            invoke: { src: 'onOpenEnd', onDone: 'done' },\r\n            on: { CLOSE: '#overlay.closing', DRAG: '#overlay.dragging' },\r\n          },\r\n          done: {\r\n            type: 'final',\r\n          },\r\n        },\r\n        on: { ...cancelOpen },\r\n        onDone: 'open',\r\n      },\r\n      open: {\r\n        on: { DRAG: '#overlay.dragging', SNAP: 'snapping', RESIZE: 'resizing' },\r\n      },\r\n      dragging: {\r\n        on: { SNAP: 'snapping' },\r\n      },\r\n      snapping: {\r\n        initial: 'start',\r\n        states: {\r\n          start: {\r\n            invoke: {\r\n              src: 'onSnapStart',\r\n              onDone: 'snappingSmoothly',\r\n            },\r\n            entry: [\r\n              assign({\r\n                // @ts-expect-error\r\n                y: (_, { payload: { y } }) => y,\r\n                velocity: (_, { payload: { velocity } }) => velocity,\r\n                snapSource: (_, { payload: { source = 'custom' } }) => source,\r\n              }),\r\n            ],\r\n          },\r\n          snappingSmoothly: {\r\n            invoke: { src: 'snapSmoothly', onDone: 'end' },\r\n          },\r\n          end: {\r\n            invoke: { src: 'onSnapEnd', onDone: 'done' },\r\n            on: {\r\n              RESIZE: '#overlay.resizing',\r\n              SNAP: '#overlay.snapping',\r\n              CLOSE: '#overlay.closing',\r\n              DRAG: '#overlay.dragging',\r\n            },\r\n          },\r\n          done: { type: 'final' },\r\n        },\r\n        on: {\r\n          SNAP: { target: 'snapping', actions: 'onSnapEnd' },\r\n          RESIZE: { target: '#overlay.resizing', actions: 'onSnapCancel' },\r\n          DRAG: { target: '#overlay.dragging', actions: 'onSnapCancel' },\r\n          CLOSE: { target: '#overlay.closing', actions: 'onSnapCancel' },\r\n        },\r\n        onDone: 'open',\r\n      },\r\n      resizing: {\r\n        initial: 'start',\r\n        states: {\r\n          start: {\r\n            invoke: {\r\n              src: 'onResizeStart',\r\n              onDone: 'resizingSmoothly',\r\n            },\r\n          },\r\n          resizingSmoothly: {\r\n            invoke: { src: 'resizeSmoothly', onDone: 'end' },\r\n          },\r\n          end: {\r\n            invoke: { src: 'onResizeEnd', onDone: 'done' },\r\n            on: {\r\n              SNAP: '#overlay.snapping',\r\n              CLOSE: '#overlay.closing',\r\n              DRAG: '#overlay.dragging',\r\n            },\r\n          },\r\n          done: { type: 'final' },\r\n        },\r\n        on: {\r\n          RESIZE: { target: 'resizing', actions: 'onResizeEnd' },\r\n          SNAP: { target: 'snapping', actions: 'onResizeCancel' },\r\n          DRAG: { target: '#overlay.dragging', actions: 'onResizeCancel' },\r\n          CLOSE: { target: '#overlay.closing', actions: 'onResizeCancel' },\r\n        },\r\n        onDone: 'open',\r\n      },\r\n      closing: {\r\n        initial: 'start',\r\n        states: {\r\n          start: {\r\n            invoke: {\r\n              src: 'onCloseStart',\r\n              onDone: 'deactivating',\r\n            },\r\n            on: { OPEN: { target: '#overlay.open', actions: 'onCloseCancel' } },\r\n          },\r\n          deactivating: {\r\n            invoke: { src: 'deactivate', onDone: 'closingSmoothly' },\r\n          },\r\n          closingSmoothly: {\r\n            invoke: { src: 'closeSmoothly', onDone: 'end' },\r\n          },\r\n          end: {\r\n            invoke: { src: 'onCloseEnd', onDone: 'done' },\r\n            on: {\r\n              OPEN: { target: '#overlay.opening', actions: 'onCloseCancel' },\r\n            },\r\n          },\r\n          done: { type: 'final' },\r\n        },\r\n        on: {\r\n          CLOSE: undefined,\r\n          OPEN: { target: '#overlay.opening', actions: 'onCloseCancel' },\r\n        },\r\n        onDone: 'closed',\r\n      },\r\n    },\r\n    on: {\r\n      CLOSE: 'closing',\r\n    },\r\n  },\r\n  {\r\n    actions: {\r\n      onOpenCancel: (context, event) => {\r\n        console.log('onOpenCancel', { context, event })\r\n      },\r\n      onSnapCancel: (context, event) => {\r\n        console.log('onSnapCancel', { context, event })\r\n      },\r\n      onResizeCancel: (context, event) => {\r\n        console.log('onResizeCancel', { context, event })\r\n      },\r\n      onCloseCancel: (context, event) => {\r\n        console.log('onCloseCancel', { context, event })\r\n      },\r\n      onOpenEnd: (context, event) => {\r\n        console.log('onOpenCancel', { context, event })\r\n      },\r\n      onSnapEnd: (context, event) => {\r\n        console.log('onSnapEnd', { context, event })\r\n      },\r\n      onRezizeEnd: (context, event) => {\r\n        console.log('onRezizeEnd', { context, event })\r\n      },\r\n    },\r\n    services: {\r\n      onSnapStart: async () => {\r\n        await sleep()\r\n      },\r\n      onOpenStart: async () => {\r\n        await sleep()\r\n      },\r\n      onCloseStart: async () => {\r\n        await sleep()\r\n      },\r\n      onResizeStart: async () => {\r\n        await sleep()\r\n      },\r\n      onSnapEnd: async () => {\r\n        await sleep()\r\n      },\r\n      onOpenEnd: async () => {\r\n        await sleep()\r\n      },\r\n      onCloseEnd: async () => {\r\n        await sleep()\r\n      },\r\n      onResizeEnd: async () => {\r\n        await sleep()\r\n      },\r\n      renderVisuallyHidden: async (context, event) => {\r\n        console.group('renderVisuallyHidden')\r\n        console.log({ context, event })\r\n        await sleep()\r\n        console.groupEnd()\r\n      },\r\n      activate: async (context, event) => {\r\n        console.group('activate')\r\n        console.log({ context, event })\r\n        await sleep()\r\n        console.groupEnd()\r\n      },\r\n      deactivate: async (context, event) => {\r\n        console.group('deactivate')\r\n        console.log({ context, event })\r\n        await sleep()\r\n        console.groupEnd()\r\n      },\r\n      openSmoothly: async (context, event) => {\r\n        console.group('openSmoothly')\r\n        console.log({ context, event })\r\n        await sleep()\r\n        console.groupEnd()\r\n      },\r\n      openImmediately: async (context, event) => {\r\n        console.group('openImmediately')\r\n        console.log({ context, event })\r\n        await sleep()\r\n        console.groupEnd()\r\n      },\r\n      snapSmoothly: async (context, event) => {\r\n        console.group('snapSmoothly')\r\n        console.log({ context, event })\r\n        await sleep()\r\n        console.groupEnd()\r\n      },\r\n      resizeSmoothly: async (context, event) => {\r\n        console.group('resizeSmoothly')\r\n        console.log({ context, event })\r\n        await sleep()\r\n        console.groupEnd()\r\n      },\r\n      closeSmoothly: async (context, event) => {\r\n        console.group('closeSmoothly')\r\n        console.log({ context, event })\r\n        await sleep()\r\n        console.groupEnd()\r\n      },\r\n    },\r\n    guards: { initiallyClosed, initiallyOpen },\r\n  }\r\n)\r\n","//\r\n// In order to greatly reduce complexity this component is designed to always transition to open on mount, and then\r\n// transition to a closed state later. This ensures that all memory used to keep track of animation and gesture state\r\n// can be reclaimed after the sheet is closed and then unmounted.\r\n// It also ensures that when transitioning to open on mount the state is always clean, not affected by previous states that could\r\n// cause race conditions.\r\n\r\nimport { useMachine } from '@xstate/react'\r\nimport React, {\r\n  useCallback,\r\n  useEffect,\r\n  useImperativeHandle,\r\n  useRef,\r\n} from 'react'\r\nimport { animated, config } from 'react-spring'\r\nimport { rubberbandIfOutOfBounds, useDrag } from 'react-use-gesture'\r\nimport {\r\n  useAriaHider,\r\n  useFocusTrap,\r\n  useLayoutEffect,\r\n  useReady,\r\n  useReducedMotion,\r\n  useScrollLock,\r\n  useSnapPoints,\r\n  useSpring,\r\n  useSpringInterpolations,\r\n} from './hooks'\r\nimport { overlayMachine } from './machines/overlay'\r\nimport type {\r\n  defaultSnapProps,\r\n  Props,\r\n  RefHandles,\r\n  ResizeSource,\r\n  SnapPointProps,\r\n} from './types'\r\nimport { debugging } from './utils'\r\n\r\nconst { tension, friction } = config.default\r\n\r\n// @TODO implement AbortController to deal with race conditions\r\n\r\n// @TODO rename to SpringBottomSheet and allow userland to import it directly, for those who want maximum control and minimal bundlesize\r\nexport const BottomSheet = React.forwardRef<\r\n  RefHandles,\r\n  {\r\n    initialState: 'OPEN' | 'CLOSED'\r\n    lastSnapRef: React.MutableRefObject<number | null>\r\n  } & Props\r\n>(function BottomSheetInternal(\r\n  {\r\n    children,\r\n    sibling,\r\n    className,\r\n    topOffset,\r\n    springConfig,\r\n    footer,\r\n    header,\r\n    open: _open,\r\n    initialState,\r\n    lastSnapRef,\r\n    initialFocusRef,\r\n    onDismiss,\r\n    maxHeight: controlledMaxHeight,\r\n    defaultSnap: getDefaultSnap = _defaultSnap,\r\n    snapPoints: getSnapPoints = _snapPoints,\r\n    blocking = true,\r\n    scrollLocking = true,\r\n    style,\r\n    onSpringStart,\r\n    onSpringCancel,\r\n    onSpringEnd,\r\n    reserveScrollBarGap = blocking,\r\n    ...props\r\n  },\r\n  forwardRef\r\n) {\r\n  // Before any animations can start we need to measure a few things, like the viewport and the dimensions of content, and header + footer if they exist\r\n  // @TODO make ready its own state perhaps, before open or closed\r\n  const { ready, registerReady } = useReady()\r\n\r\n  // Controls the drag handler, used by spring operations that happen outside the render loop in React\r\n  const canDragRef = useRef(false)\r\n\r\n  // This way apps don't have to remember to wrap their callbacks in useCallback to avoid breaking the sheet\r\n  const onSpringStartRef = useRef(onSpringStart)\r\n  const onSpringCancelRef = useRef(onSpringCancel)\r\n  const onSpringEndRef = useRef(onSpringEnd)\r\n  useEffect(() => {\r\n    onSpringStartRef.current = onSpringStart\r\n    onSpringCancelRef.current = onSpringCancel\r\n    onSpringEndRef.current = onSpringEnd\r\n  }, [onSpringCancel, onSpringStart, onSpringEnd])\r\n\r\n  // Behold, the engine of it all!\r\n  const [spring, set] = useSpring()\r\n\r\n  const containerRef = useRef<HTMLDivElement>(null)\r\n  const scrollRef = useRef<HTMLDivElement>(null)\r\n  const contentRef = useRef<HTMLDivElement>(null)\r\n  const headerRef = useRef<HTMLDivElement>(null)\r\n  const footerRef = useRef<HTMLDivElement>(null)\r\n  const overlayRef = useRef<HTMLDivElement | null>(null)\r\n\r\n  // Keeps track of the current height, or the height transitioning to\r\n  const heightRef = useRef(0)\r\n  const resizeSourceRef = useRef<ResizeSource>()\r\n\r\n  const prefersReducedMotion = useReducedMotion()\r\n\r\n  // \"Plugins\" huhuhu\r\n  const scrollLockRef = useScrollLock({\r\n    targetRef: scrollRef,\r\n    enabled: ready && scrollLocking,\r\n    reserveScrollBarGap,\r\n  })\r\n  const ariaHiderRef = useAriaHider({\r\n    targetRef: containerRef,\r\n    enabled: ready && blocking,\r\n  })\r\n  const focusTrapRef = useFocusTrap({\r\n    targetRef: containerRef,\r\n    fallbackRef: overlayRef,\r\n    initialFocusRef,\r\n    enabled: ready && blocking,\r\n  })\r\n\r\n  const { minSnap, maxSnap, maxHeight, findSnap } = useSnapPoints({\r\n    contentRef,\r\n    controlledMaxHeight,\r\n    footerEnabled: !!footer,\r\n    footerRef,\r\n    getSnapPoints,\r\n    headerEnabled: header !== false,\r\n    headerRef,\r\n    heightRef,\r\n    lastSnapRef,\r\n    ready,\r\n    registerReady,\r\n    resizeSourceRef,\r\n  })\r\n\r\n  // Setup refs that are used in cases where full control is needed over when a side effect is executed\r\n  const maxHeightRef = useRef(maxHeight)\r\n  const minSnapRef = useRef(minSnap)\r\n  const maxSnapRef = useRef(maxSnap)\r\n  const findSnapRef = useRef(findSnap)\r\n  const defaultSnapRef = useRef(0)\r\n  const topOffsetRef = useRef(topOffset || 0)\r\n  // Sync the refs with current state, giving the spring full control over when to respond to changes\r\n  useLayoutEffect(() => {\r\n    maxHeightRef.current = maxHeight\r\n    maxSnapRef.current = maxSnap\r\n    minSnapRef.current = minSnap\r\n    findSnapRef.current = findSnap\r\n    defaultSnapRef.current = findSnap(getDefaultSnap)\r\n  }, [findSnap, getDefaultSnap, maxHeight, maxSnap, minSnap])\r\n\r\n  // New utility for using events safely\r\n  const asyncSet = useCallback<typeof set>(\r\n    // @ts-expect-error\r\n    ({ onRest, config: { velocity = 1, ...config } = {}, ...opts }) =>\r\n      new Promise((resolve) =>\r\n        set({\r\n          ...opts,\r\n          config: {\r\n            velocity,\r\n            ...config,\r\n            // @see https://springs.pomb.us\r\n            mass: 1,\r\n            // \"stiffness\"\r\n            tension,\r\n            // \"damping\"\r\n            friction: Math.max(\r\n              friction,\r\n              friction + (friction - friction * velocity)\r\n            ),\r\n\r\n            ...springConfig,\r\n          },\r\n          onRest: (...args) => {\r\n            resolve(...args)\r\n            onRest?.(...args)\r\n          },\r\n        })\r\n      ),\r\n    [set]\r\n  )\r\n  const [current, send] = useMachine(overlayMachine, {\r\n    devTools: debugging,\r\n    actions: {\r\n      onOpenCancel: useCallback(\r\n        () => onSpringCancelRef.current?.({ type: 'OPEN' }),\r\n        []\r\n      ),\r\n      onSnapCancel: useCallback(\r\n        (context) =>\r\n          onSpringCancelRef.current?.({\r\n            type: 'SNAP',\r\n            source: context.snapSource,\r\n          }),\r\n        []\r\n      ),\r\n      onCloseCancel: useCallback(\r\n        () => onSpringCancelRef.current?.({ type: 'CLOSE' }),\r\n        []\r\n      ),\r\n      onResizeCancel: useCallback(\r\n        () =>\r\n          onSpringCancelRef.current?.({\r\n            type: 'RESIZE',\r\n            source: resizeSourceRef.current,\r\n          }),\r\n        []\r\n      ),\r\n      onOpenEnd: useCallback(\r\n        () => onSpringEndRef.current?.({ type: 'OPEN' }),\r\n        []\r\n      ),\r\n      onSnapEnd: useCallback(\r\n        (context, event) =>\r\n          onSpringEndRef.current?.({\r\n            type: 'SNAP',\r\n            source: context.snapSource,\r\n          }),\r\n        []\r\n      ),\r\n      onResizeEnd: useCallback(\r\n        () =>\r\n          onSpringEndRef.current?.({\r\n            type: 'RESIZE',\r\n            source: resizeSourceRef.current,\r\n          }),\r\n        []\r\n      ),\r\n    },\r\n    context: { initialState },\r\n    services: {\r\n      onSnapStart: useCallback(\r\n        async (context, event) =>\r\n          onSpringStartRef.current?.({\r\n            type: 'SNAP',\r\n            source: event.payload.source || 'custom',\r\n          }),\r\n        []\r\n      ),\r\n      onOpenStart: useCallback(\r\n        async () => onSpringStartRef.current?.({ type: 'OPEN' }),\r\n        []\r\n      ),\r\n      onCloseStart: useCallback(\r\n        async () => onSpringStartRef.current?.({ type: 'CLOSE' }),\r\n        []\r\n      ),\r\n      onResizeStart: useCallback(\r\n        async () =>\r\n          onSpringStartRef.current?.({\r\n            type: 'RESIZE',\r\n            source: resizeSourceRef.current,\r\n          }),\r\n        []\r\n      ),\r\n      onSnapEnd: useCallback(\r\n        async (context, event) =>\r\n          onSpringEndRef.current?.({\r\n            type: 'SNAP',\r\n            source: context.snapSource,\r\n          }),\r\n        []\r\n      ),\r\n      onOpenEnd: useCallback(\r\n        async () => onSpringEndRef.current?.({ type: 'OPEN' }),\r\n        []\r\n      ),\r\n      onCloseEnd: useCallback(\r\n        async () => onSpringEndRef.current?.({ type: 'CLOSE' }),\r\n        []\r\n      ),\r\n      onResizeEnd: useCallback(\r\n        async () =>\r\n          onSpringEndRef.current?.({\r\n            type: 'RESIZE',\r\n            source: resizeSourceRef.current,\r\n          }),\r\n        []\r\n      ),\r\n      renderVisuallyHidden: useCallback(\r\n        async (context, event) => {\r\n          await asyncSet({\r\n            y: defaultSnapRef.current,\r\n            ready: 0,\r\n            maxHeight: maxHeightRef.current,\r\n            maxSnap: maxSnapRef.current,\r\n            // Using defaultSnapRef instead of minSnapRef to avoid animating `height` on open\r\n            minSnap: defaultSnapRef.current,\r\n            immediate: true,\r\n            topOffset: topOffsetRef.current,\r\n          })\r\n        },\r\n        [asyncSet]\r\n      ),\r\n      activate: useCallback(\r\n        async (context, event) => {\r\n          canDragRef.current = true\r\n          await Promise.all([\r\n            scrollLockRef.current.activate(),\r\n            focusTrapRef.current.activate(),\r\n            ariaHiderRef.current.activate(),\r\n          ])\r\n        },\r\n        [ariaHiderRef, focusTrapRef, scrollLockRef]\r\n      ),\r\n      deactivate: useCallback(async () => {\r\n        scrollLockRef.current.deactivate()\r\n        focusTrapRef.current.deactivate()\r\n        ariaHiderRef.current.deactivate()\r\n        canDragRef.current = false\r\n      }, [ariaHiderRef, focusTrapRef, scrollLockRef]),\r\n      openImmediately: useCallback(async () => {\r\n        heightRef.current = defaultSnapRef.current\r\n        await asyncSet({\r\n          y: defaultSnapRef.current,\r\n          ready: 1,\r\n          maxHeight: maxHeightRef.current,\r\n          maxSnap: maxSnapRef.current,\r\n          // Using defaultSnapRef instead of minSnapRef to avoid animating `height` on open\r\n          minSnap: defaultSnapRef.current,\r\n          immediate: true,\r\n          topOffset: topOffsetRef.current\r\n        })\r\n      }, [asyncSet]),\r\n      openSmoothly: useCallback(async () => {\r\n        await asyncSet({\r\n          y: 0,\r\n          ready: 1,\r\n          maxHeight: maxHeightRef.current,\r\n          maxSnap: maxSnapRef.current,\r\n          // Using defaultSnapRef instead of minSnapRef to avoid animating `height` on open\r\n          minSnap: defaultSnapRef.current,\r\n          immediate: true,\r\n          topOffset: topOffsetRef.current\r\n        })\r\n\r\n        heightRef.current = defaultSnapRef.current\r\n\r\n        await asyncSet({\r\n          y: defaultSnapRef.current,\r\n          ready: 1,\r\n          maxHeight: maxHeightRef.current,\r\n          maxSnap: maxSnapRef.current,\r\n          // Using defaultSnapRef instead of minSnapRef to avoid animating `height` on open\r\n          minSnap: defaultSnapRef.current,\r\n          immediate: prefersReducedMotion.current,\r\n          topOffset: topOffsetRef.current,\r\n        })\r\n      }, [asyncSet, prefersReducedMotion]),\r\n      snapSmoothly: useCallback(\r\n        async (context, event) => {\r\n          const snap = findSnapRef.current(context.y)\r\n          heightRef.current = snap\r\n          lastSnapRef.current = snap\r\n          await asyncSet({\r\n            y: snap,\r\n            ready: 1,\r\n            maxHeight: maxHeightRef.current,\r\n            maxSnap: maxSnapRef.current,\r\n            minSnap: minSnapRef.current,\r\n            immediate: prefersReducedMotion.current,\r\n            topOffset: topOffsetRef.current,\r\n            config: { velocity: context.velocity },\r\n          })\r\n        },\r\n        [asyncSet, lastSnapRef, prefersReducedMotion]\r\n      ),\r\n      resizeSmoothly: useCallback(async () => {\r\n        const snap = findSnapRef.current(heightRef.current)\r\n        heightRef.current = snap\r\n        lastSnapRef.current = snap\r\n        await asyncSet({\r\n          y: snap,\r\n          ready: 1,\r\n          maxHeight: maxHeightRef.current,\r\n          maxSnap: maxSnapRef.current,\r\n          minSnap: minSnapRef.current,\r\n          topOffset: topOffsetRef.current,\r\n          immediate:\r\n            resizeSourceRef.current === 'element'\r\n              ? prefersReducedMotion.current\r\n              : true,\r\n        })\r\n      }, [asyncSet, lastSnapRef, prefersReducedMotion]),\r\n      closeSmoothly: useCallback(\r\n        async (context, event) => {\r\n          // Avoid animating the height property on close and stay within FLIP bounds by upping the minSnap\r\n          asyncSet({\r\n            minSnap: heightRef.current,\r\n            immediate: true,\r\n          })\r\n\r\n          heightRef.current = 0\r\n\r\n          await asyncSet({\r\n            y: 0,\r\n            maxHeight: maxHeightRef.current,\r\n            maxSnap: maxSnapRef.current,\r\n            immediate: prefersReducedMotion.current,\r\n          })\r\n\r\n          await asyncSet({ ready: 0, immediate: true })\r\n        },\r\n        [asyncSet, prefersReducedMotion]\r\n      ),\r\n    },\r\n  })\r\n\r\n  useEffect(() => {\r\n    if (!ready) return\r\n\r\n    if (_open) {\r\n      send('OPEN')\r\n    } else {\r\n      send('CLOSE')\r\n    }\r\n  }, [_open, send, ready])\r\n  useLayoutEffect(() => {\r\n    // Adjust the height whenever the snap points are changed due to resize events\r\n    if (maxHeight || maxSnap || minSnap) {\r\n      send('RESIZE')\r\n    }\r\n  }, [maxHeight, maxSnap, minSnap, send])\r\n  useEffect(\r\n    () => () => {\r\n      // Ensure effects are cleaned up on unmount, in case they're not cleaned up otherwise\r\n      scrollLockRef.current.deactivate()\r\n      focusTrapRef.current.deactivate()\r\n      ariaHiderRef.current.deactivate()\r\n    },\r\n    [ariaHiderRef, focusTrapRef, scrollLockRef]\r\n  )\r\n\r\n  useImperativeHandle(\r\n    forwardRef,\r\n    () => ({\r\n      snapTo: (numberOrCallback, { velocity = 1, source = 'custom' } = {}) => {\r\n        send('SNAP', {\r\n          payload: {\r\n            y: findSnapRef.current(numberOrCallback),\r\n            velocity,\r\n            source,\r\n          },\r\n        })\r\n      },\r\n      get height() {\r\n        return heightRef.current\r\n      },\r\n    }),\r\n    [send]\r\n  )\r\n\r\n  const handleDrag = ({\r\n    args: [{ closeOnTap = false } = {}] = [],\r\n    cancel,\r\n    direction: [, direction],\r\n    down,\r\n    first,\r\n    last,\r\n    memo = spring.y.getValue() as number,\r\n    movement: [, _my],\r\n    tap,\r\n    velocity,\r\n  }) => {\r\n    const my = _my * -1\r\n\r\n    // Cancel the drag operation if the canDrag state changed\r\n    if (!canDragRef.current) {\r\n      console.log('handleDrag cancelled dragging because canDragRef is false')\r\n      cancel()\r\n      return memo\r\n    }\r\n\r\n    if (onDismiss && closeOnTap && tap) {\r\n      cancel()\r\n      // Runs onDismiss in a timeout to avoid tap events on the backdrop from triggering click events on elements underneath\r\n      setTimeout(() => onDismiss(), 0)\r\n      return memo\r\n    }\r\n\r\n    // Filter out taps\r\n    if (tap) {\r\n      return memo\r\n    }\r\n\r\n    const rawY = memo + my\r\n    const predictedDistance = my * velocity\r\n    const predictedY = Math.max(\r\n      minSnapRef.current,\r\n      Math.min(maxSnapRef.current, rawY + predictedDistance * 2)\r\n    )\r\n\r\n    if (\r\n      !down &&\r\n      onDismiss &&\r\n      direction > 0 &&\r\n      rawY + predictedDistance < minSnapRef.current / 2\r\n    ) {\r\n      cancel()\r\n      onDismiss()\r\n      return memo\r\n    }\r\n\r\n    let newY = down\r\n      ? // @TODO figure out a better way to deal with rubberband overshooting if min and max have the same value\r\n        !onDismiss && minSnapRef.current === maxSnapRef.current\r\n        ? rawY < minSnapRef.current\r\n          ? rubberbandIfOutOfBounds(\r\n              rawY,\r\n              minSnapRef.current,\r\n              maxSnapRef.current * 2,\r\n              0.85\r\n            )\r\n          : rubberbandIfOutOfBounds(\r\n              rawY,\r\n              minSnapRef.current / 2,\r\n              maxSnapRef.current,\r\n              0.85\r\n            )\r\n        : rubberbandIfOutOfBounds(\r\n            rawY,\r\n            onDismiss ? 0 : minSnapRef.current,\r\n            maxSnapRef.current,\r\n            0.85\r\n          )\r\n      : predictedY\r\n\r\n    if (first) {\r\n      send('DRAG')\r\n    }\r\n\r\n    if (last) {\r\n      send('SNAP', {\r\n        payload: {\r\n          y: newY,\r\n          velocity: velocity > 0.05 ? velocity : 1,\r\n          source: 'dragging',\r\n        },\r\n      })\r\n\r\n      return memo\r\n    }\r\n\r\n    // @TODO too many rerenders\r\n    //send('DRAG', { y: newY, velocity })\r\n    //*\r\n    set({\r\n      y: newY,\r\n      ready: 1,\r\n      maxHeight: maxHeightRef.current,\r\n      maxSnap: maxSnapRef.current,\r\n      minSnap: minSnapRef.current,\r\n      topOffset: topOffsetRef.current,\r\n      immediate: true,\r\n      config: { velocity },\r\n    })\r\n    // */\r\n\r\n    return memo\r\n  }\r\n\r\n  const bind = useDrag(handleDrag, {\r\n    filterTaps: true,\r\n  })\r\n\r\n  if (Number.isNaN(maxSnapRef.current)) {\r\n    throw new TypeError('maxSnapRef is NaN!!')\r\n  }\r\n  if (Number.isNaN(minSnapRef.current)) {\r\n    throw new TypeError('minSnapRef is NaN!!')\r\n  }\r\n\r\n  const interpolations = useSpringInterpolations({ spring })\r\n\r\n  return (\r\n    <animated.div\r\n      {...props}\r\n      data-rsbs-root\r\n      data-rsbs-state={publicStates.find(current.matches)}\r\n      data-rsbs-is-blocking={blocking}\r\n      data-rsbs-is-dismissable={!!onDismiss}\r\n      data-rsbs-has-header={!!header}\r\n      data-rsbs-has-footer={!!footer}\r\n      className={className}\r\n      ref={containerRef}\r\n      style={{\r\n        // spread in the interpolations yeees\r\n        ...interpolations,\r\n        // but allow overriding them/disabling them\r\n        ...style,\r\n        // Not overridable as the \"focus lock with opacity 0\" trick rely on it\r\n        // @TODO the line below only fails on TS <4\r\n        // @ts-ignore\r\n        opacity: spring.ready,\r\n      }}\r\n    >\r\n      {sibling}\r\n      {blocking && (\r\n        <div\r\n          // This component needs to be placed outside bottom-sheet, as bottom-sheet uses transform and thus creates a new context\r\n          // that clips this element to the container, not allowing it to cover the full page.\r\n          key=\"backdrop\"\r\n          data-rsbs-backdrop\r\n          {...bind({ closeOnTap: true })}\r\n        />\r\n      )}\r\n      <div\r\n        key=\"overlay\"\r\n        aria-modal=\"true\"\r\n        role=\"dialog\"\r\n        data-rsbs-overlay\r\n        tabIndex={-1}\r\n        ref={overlayRef}\r\n        onKeyDown={(event) => {\r\n          if (event.key === 'Escape') {\r\n            // Always stop propagation, to avoid weirdness for bottom sheets inside other bottom sheets\r\n            event.stopPropagation()\r\n            if (onDismiss) onDismiss()\r\n          }\r\n        }}\r\n      >\r\n        {header !== false && (\r\n          <div key=\"header\" data-rsbs-header ref={headerRef} {...bind()}>\r\n            {header}\r\n          </div>\r\n        )}\r\n        <div key=\"scroll\" data-rsbs-scroll ref={scrollRef}>\r\n          <div data-rsbs-content ref={contentRef}>\r\n            {children}\r\n          </div>\r\n        </div>\r\n        {footer && (\r\n          <div key=\"footer\" ref={footerRef} data-rsbs-footer {...bind()}>\r\n            {footer}\r\n          </div>\r\n        )}\r\n      </div>\r\n    </animated.div>\r\n  )\r\n})\r\n\r\n// Used for the data attribute, list over states available to CSS selectors\r\nconst publicStates = [\r\n  'closed',\r\n  'opening',\r\n  'open',\r\n  'closing',\r\n  'dragging',\r\n  'snapping',\r\n  'resizing',\r\n]\r\n\r\n// Default prop values that are callbacks, and it's nice to save some memory and reuse their instances since they're pure\r\nfunction _defaultSnap({ snapPoints, lastSnap }: defaultSnapProps) {\r\n  return lastSnap ?? Math.min(...snapPoints)\r\n}\r\nfunction _snapPoints({ minHeight }: SnapPointProps) {\r\n  return minHeight\r\n}\r\n","// Keeps track of wether everything is good to go or not, in the most efficient way possible\r\n\r\nimport { useCallback, useEffect, useState } from 'react'\r\n\r\nexport function useReady() {\r\n  const [ready, setReady] = useState(false)\r\n  const [readyMap, updateReadyMap] = useState<{ [key: string]: boolean }>({})\r\n\r\n  const registerReady = useCallback((key: string) => {\r\n    console.count(`registerReady:${key}`)\r\n    // Register the check we're gonna wait for until it's ready\r\n    updateReadyMap((ready) => ({ ...ready, [key]: false }))\r\n\r\n    return () => {\r\n      console.count(`setReady:${key}`)\r\n      // Set it to ready\r\n      updateReadyMap((ready) => ({ ...ready, [key]: true }))\r\n    }\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    const states = Object.values(readyMap)\r\n\r\n    if (states.length === 0) {\r\n      console.log('nope nothing registered yet')\r\n      return\r\n    }\r\n\r\n    const isReady = states.every(Boolean)\r\n    console.log('check if we are rready', readyMap, isReady)\r\n    if (isReady) {\r\n      console.warn('ready!')\r\n      setReady(true)\r\n    }\r\n  }, [readyMap])\r\n\r\n  return { ready, registerReady }\r\n}\r\n","import { useSpring as useReactSpring } from 'react-spring'\r\n\r\n// Behold, the engine of it all!\r\n// Put in this file befause it makes it easier to type and I'm lazy! :D\r\n\r\nexport function useSpring() {\r\n  return useReactSpring(() => ({\r\n    y: 0,\r\n    ready: 0,\r\n    maxHeight: 0,\r\n    minSnap: 0,\r\n    maxSnap: 0,\r\n    topOffset: 0,\r\n  }))\r\n}\r\n\r\nexport type Spring = ReturnType<typeof useSpring>[0]\r\nexport type SpringSet = ReturnType<typeof useSpring>[1]\r\n","import { useDebugValue, useEffect, useMemo, useRef } from 'react'\r\n\r\n// @TODO refactor to addEventListener\r\nexport function useReducedMotion() {\r\n  const mql = useMemo(\r\n    () =>\r\n      typeof window !== 'undefined'\r\n        ? window.matchMedia('(prefers-reduced-motion: reduce)')\r\n        : null,\r\n    []\r\n  )\r\n  const ref = useRef(mql?.matches)\r\n\r\n  useDebugValue(ref.current ? 'reduce' : 'no-preference')\r\n\r\n  useEffect(() => {\r\n    const handler = (event) => {\r\n      ref.current = event.matches\r\n    }\r\n    mql?.addListener(handler)\r\n\r\n    return () => mql?.removeListener(handler)\r\n  }, [mql])\r\n\r\n  return ref\r\n}\r\n","import { disableBodyScroll, enableBodyScroll } from 'body-scroll-lock'\r\nimport { useDebugValue, useEffect, useRef } from 'react'\r\n\r\n/**\r\n * Handle scroll locking to ensure a good dragging experience on Android and iOS.\r\n *\r\n * On iOS the following may happen if scroll isn't locked:\r\n * - When dragging the sheet the background gets dragged at the same time.\r\n * - When dragging the page scroll is also affected, causing the drag to feel buggy and \"slow\".\r\n *\r\n * On Android it causes the chrome toolbar to pop down as you drag down, and hide as you drag up.\r\n * When it's in between two toolbar states it causes the framerate to drop way below 60fps on\r\n * the bottom sheet drag interaction.\r\n */\r\nexport function useScrollLock({\r\n  targetRef,\r\n  enabled,\r\n  reserveScrollBarGap,\r\n}: {\r\n  targetRef: React.RefObject<Element>\r\n  enabled: boolean\r\n  reserveScrollBarGap: boolean\r\n}) {\r\n  const ref = useRef<{ activate: () => void; deactivate: () => void }>({\r\n    activate: () => {\r\n      throw new TypeError('Tried to activate scroll lock too early')\r\n    },\r\n    deactivate: () => {},\r\n  })\r\n\r\n  useDebugValue(enabled ? 'Enabled' : 'Disabled')\r\n\r\n  useEffect(() => {\r\n    if (!enabled) {\r\n      ref.current.deactivate()\r\n      ref.current = { activate: () => {}, deactivate: () => {} }\r\n      return\r\n    }\r\n\r\n    const target = targetRef.current\r\n    let active = false\r\n\r\n    ref.current = {\r\n      activate: () => {\r\n        if (active) return\r\n        active = true\r\n        disableBodyScroll(target, {\r\n          allowTouchMove: (el) => el.closest('[data-body-scroll-lock-ignore]'),\r\n          reserveScrollBarGap,\r\n        })\r\n      },\r\n      deactivate: () => {\r\n        if (!active) return\r\n        active = false\r\n        enableBodyScroll(target)\r\n      },\r\n    }\r\n  }, [enabled, targetRef, reserveScrollBarGap])\r\n\r\n  return ref\r\n}\r\n","import React, { useDebugValue, useEffect, useRef } from 'react'\r\n\r\n// Handle hiding and restoring aria-hidden attributes\r\nexport function useAriaHider({\r\n  targetRef,\r\n  enabled,\r\n}: {\r\n  targetRef: React.RefObject<Element>\r\n  enabled: boolean\r\n}) {\r\n  const ref = useRef<{ activate: () => void; deactivate: () => void }>({\r\n    activate: () => {\r\n      throw new TypeError('Tried to activate aria hider too early')\r\n    },\r\n    deactivate: () => {},\r\n  })\r\n\r\n  useDebugValue(enabled ? 'Enabled' : 'Disabled')\r\n\r\n  useEffect(() => {\r\n    if (!enabled) {\r\n      ref.current.deactivate()\r\n      ref.current = { activate: () => {}, deactivate: () => {} }\r\n      return\r\n    }\r\n\r\n    const target = targetRef.current\r\n    let active = false\r\n    let originalValues: (null | string)[] = []\r\n    let rootNodes: Element[] = []\r\n\r\n    ref.current = {\r\n      activate: () => {\r\n        if (active) return\r\n        active = true\r\n\r\n        const parentNode = target.parentNode\r\n\r\n        document.querySelectorAll('body > *').forEach((node) => {\r\n          if (node === parentNode) {\r\n            return\r\n          }\r\n          let attr = node.getAttribute('aria-hidden')\r\n          let alreadyHidden = attr !== null && attr !== 'false'\r\n          if (alreadyHidden) {\r\n            return\r\n          }\r\n          originalValues.push(attr)\r\n          rootNodes.push(node)\r\n          node.setAttribute('aria-hidden', 'true')\r\n        })\r\n      },\r\n      deactivate: () => {\r\n        if (!active) return\r\n        active = false\r\n\r\n        rootNodes.forEach((node, index) => {\r\n          let originalValue = originalValues[index]\r\n          if (originalValue === null) {\r\n            node.removeAttribute('aria-hidden')\r\n          } else {\r\n            node.setAttribute('aria-hidden', originalValue)\r\n          }\r\n        })\r\n        originalValues = []\r\n        rootNodes = []\r\n      },\r\n    }\r\n  }, [targetRef, enabled])\r\n\r\n  return ref\r\n}\r\n","import { createFocusTrap } from 'focus-trap'\r\nimport { useDebugValue, useEffect, useRef } from 'react'\r\n\r\nexport function useFocusTrap({\r\n  targetRef,\r\n  fallbackRef,\r\n  initialFocusRef,\r\n  enabled,\r\n}: {\r\n  targetRef: React.RefObject<HTMLElement>\r\n  fallbackRef: React.RefObject<HTMLElement>\r\n  initialFocusRef?: React.RefObject<HTMLElement>\r\n  enabled: boolean\r\n}) {\r\n  const ref = useRef<{ activate: () => void; deactivate: () => void }>({\r\n    activate: () => {\r\n      throw new TypeError('Tried to activate focus trap too early')\r\n    },\r\n    deactivate: () => {},\r\n  })\r\n\r\n  useDebugValue(enabled ? 'Enabled' : 'Disabled')\r\n\r\n  useEffect(() => {\r\n    if (!enabled) {\r\n      ref.current.deactivate()\r\n      ref.current = { activate: () => {}, deactivate: () => {} }\r\n      return\r\n    }\r\n\r\n    const fallback = fallbackRef.current\r\n    const trap = createFocusTrap(targetRef.current, {\r\n      onActivate:\r\n        process.env.NODE_ENV !== 'production'\r\n          ? () => {\r\n              console.log('focus activate')\r\n            }\r\n          : undefined,\r\n      // If initialFocusRef is manually specified we don't want the first tabbable element to receive focus if initialFocusRef can't be found\r\n      initialFocus: initialFocusRef\r\n        ? () => initialFocusRef?.current || fallback\r\n        : undefined,\r\n      fallbackFocus: fallback,\r\n      escapeDeactivates: false,\r\n      clickOutsideDeactivates: false,\r\n    })\r\n    let active = false\r\n\r\n    ref.current = {\r\n      activate: async () => {\r\n        if (active) return\r\n        active = true\r\n\r\n        await trap.activate()\r\n        // it's difficult to know exactly when focus is udpated https://github.com/focus-trap/focus-trap/blob/036a72ec48b85414dda00ec0c40d631c8f0ae5ce/index.js#L369-L371\r\n        // This timeout is attempting to compromise between a reasonable guess, as well as not delaying the open transition more than necessary\r\n        await new Promise((resolve) => setTimeout(() => resolve(void 1), 0))\r\n      },\r\n      deactivate: () => {\r\n        if (!active) return\r\n        active = false\r\n\r\n        trap.deactivate()\r\n      },\r\n    }\r\n  }, [enabled, fallbackRef, initialFocusRef, targetRef])\r\n\r\n  return ref\r\n}\r\n","import { interpolate } from 'react-spring'\r\nimport type { Spring } from './useSpring'\r\nimport { clamp } from '../utils'\r\n\r\n// It's a bit easier to ensure interpolations don't accidentally use the wrong variables by\r\n// putting them here, in their own closure with explicitly defined variables used\r\n\r\n// Note that the callbacks in the interpolation functions close over their scope every time react renders\r\n// so it's important that if anything can change outside of render that needs to be available\r\n// in the interpolation then a ref must be used\r\n\r\nexport function useSpringInterpolations({\r\n  spring,\r\n}: {\r\n  spring: Spring\r\n}): React.CSSProperties {\r\n  // This effect is for removing rounded corners on phones when the sheet touches the top of the browser chrome\r\n  // as it's really ugly with the gaps border radius creates. This ensures it looks sleek.\r\n  // @TODO the ts-ignore comments are because the `extrapolate` param isn't in the TS defs for some reason\r\n  const interpolateBorderRadius = interpolate(\r\n    // @ts-expect-error\r\n    [spring.y, spring.maxHeight, spring.topOffset],\r\n    (y, maxHeight, topOffset) => {\r\n      return `${Math.round(clamp(maxHeight - y - (topOffset || 0), 0, 16))}px`\r\n    }\r\n  )\r\n\r\n  /*\r\n   * Only animate the height when absolute necessary\r\n   * @TODO currently it's only able to opt out of changing the height if there's just a single snapshot\r\n   *       but it should be possible to do it in other scenarios too, like on window resize,\r\n   *       or maybe even while dragging, but probably requires a more restrictive CSS.\r\n   *       As in now the sticky footer isn't overlapping the content, allowing `backdrop-filter: blur(8px)` effects.\r\n   *       A FLIP resize flow for content height would likely require the sticky elements to overlap the content area.\r\n   *       Could be done as a separat mode though, or a separate example CSS for max performance.\r\n   */\r\n  const interpolateHeight = interpolate(\r\n    // @ts-ignore\r\n    [spring.y, spring.minSnap, spring.maxSnap],\r\n    (y, minSnap, maxSnap) => `${clamp(y, minSnap, maxSnap)}px`\r\n  )\r\n\r\n  const interpolateY = interpolate(\r\n    // @ts-ignore\r\n    [spring.y, spring.minSnap, spring.maxSnap],\r\n    (y, minSnap, maxSnap) => {\r\n      if (y < minSnap) {\r\n        return `${minSnap - y}px`\r\n      }\r\n      if (y > maxSnap) {\r\n        return `${maxSnap - y}px`\r\n      }\r\n      return '0px'\r\n    }\r\n  )\r\n\r\n  const interpolateFiller = interpolate(\r\n    // @ts-ignore\r\n    [spring.y, spring.maxSnap],\r\n    (y, maxSnap) => {\r\n      if (y >= maxSnap) {\r\n        return Math.ceil(y - maxSnap)\r\n      }\r\n      return 0\r\n    }\r\n  )\r\n\r\n  const interpolateContentOpacity = interpolate(\r\n    // @ts-ignore\r\n    [spring.y, spring.minSnap],\r\n    (y, minSnap) => {\r\n      if (!minSnap) {\r\n        return 0\r\n      }\r\n      const minX = Math.max(minSnap / 2 - 45, 0)\r\n      const maxX = Math.min(minSnap / 2 + 45, minSnap)\r\n      const minY = 0\r\n      const maxY = 1\r\n\r\n      const slope = (maxY - minY) / (maxX - minX)\r\n      const res = (y - minX) * (slope + minY)\r\n      return clamp(res, 0, 1)\r\n    }\r\n  )\r\n\r\n  const interpolateBackdrop = interpolate(\r\n    // @ts-ignore\r\n    [spring.y, spring.minSnap],\r\n    (y, minSnap) => (minSnap ? clamp(y / minSnap, 0, 1) : 0)\r\n  )\r\n\r\n  return {\r\n    // Fancy content fade-in effect\r\n    ['--rsbs-content-opacity' as any]: interpolateContentOpacity,\r\n    // Fading in the backdrop\r\n    ['--rsbs-backdrop-opacity' as any]: interpolateBackdrop,\r\n    // Scaling the antigap in the bottom\r\n    ['--rsbs-antigap-scale-y' as any]: interpolateFiller,\r\n    // Shifts the position of the bottom sheet, used on open and close primarily as snap point changes usually only interpolate the height\r\n    ['--rsbs-overlay-translate-y' as any]: interpolateY,\r\n    // Remove rounded borders when full height, it looks much better this way\r\n    ['--rsbs-overlay-rounded' as any]: interpolateBorderRadius,\r\n    // Animates the height state, not the most performant way but it's the safest with regards to mobile browser and focus/scrolling that could happen while animating\r\n    ['--rsbs-overlay-h' as any]: interpolateHeight,\r\n  }\r\n}\r\n","/* eslint-disable react/jsx-pascal-case */\r\nimport Portal from '@reach/portal'\r\nimport React, { forwardRef, useRef, useState, useCallback } from 'react'\r\nimport { BottomSheet as _BottomSheet } from './BottomSheet'\r\nimport type { Props, RefHandles, SpringEvent } from './types'\r\nimport { useLayoutEffect } from './hooks'\r\n\r\nexport type {\r\n  RefHandles as BottomSheetRef,\r\n  Props as BottomSheetProps,\r\n} from './types'\r\n\r\n// Because SSR is annoying to deal with, and all the million complaints about window, navigator and dom elenents!\r\nexport const BottomSheet = forwardRef<RefHandles, Props>(function BottomSheet(\r\n  { onSpringStart, onSpringEnd, skipInitialTransition, ...props },\r\n  ref\r\n) {\r\n  // Mounted state, helps SSR but also ensures you can't tab into the sheet while it's closed, or nav there in a screen reader\r\n  const [mounted, setMounted] = useState(false)\r\n  const timerRef = useRef<ReturnType<typeof requestAnimationFrame>>()\r\n  // The last point that the user snapped to, useful for open/closed toggling and the user defined height is remembered\r\n  const lastSnapRef = useRef(null)\r\n  // @TODO refactor to an initialState: OPEN | CLOSED property as it's much easier to understand\r\n  // And informs what we should animate from. If the sheet is mounted with open = true, then initialState = OPEN.\r\n  // When initialState = CLOSED, then internal sheet must first render with open={false} before setting open={props.open}\r\n  // It's only when initialState and props.open is mismatching that a intial transition should happen\r\n  // If they match then transitions will only happen when a user interaction or resize event happen.\r\n  const initialStateRef = useRef<'OPEN' | 'CLOSED'>(\r\n    skipInitialTransition && props.open ? 'OPEN' : 'CLOSED'\r\n  )\r\n\r\n  // Using layout effect to support cases where the bottom sheet have to appear already open, no transition\r\n  useLayoutEffect(() => {\r\n    if (props.open) {\r\n      cancelAnimationFrame(timerRef.current)\r\n      setMounted(true)\r\n\r\n      // Cleanup defaultOpen state on close\r\n      return () => {\r\n        initialStateRef.current = 'CLOSED'\r\n      }\r\n    }\r\n  }, [props.open])\r\n\r\n  const handleSpringStart = useCallback(\r\n    async function handleSpringStart(event: SpringEvent) {\r\n      // Forward the event\r\n      await onSpringStart?.(event)\r\n\r\n      if (event.type === 'OPEN') {\r\n        // Ensures that when it's opening we abort any pending unmount action\r\n        cancelAnimationFrame(timerRef.current)\r\n      }\r\n    },\r\n    [onSpringStart]\r\n  )\r\n\r\n  const handleSpringEnd = useCallback(\r\n    async function handleSpringEnd(event: SpringEvent) {\r\n      // Forward the event\r\n      await onSpringEnd?.(event)\r\n\r\n      if (event.type === 'CLOSE') {\r\n        // Unmount from the dom to avoid contents being tabbable or visible to screen readers while closed\r\n        timerRef.current = requestAnimationFrame(() => setMounted(false))\r\n      }\r\n    },\r\n    [onSpringEnd]\r\n  )\r\n\r\n  // This isn't just a performance optimization, it's also to avoid issues when running a non-browser env like SSR\r\n  if (!mounted) {\r\n    return null\r\n  }\r\n\r\n  return (\r\n    <Portal data-rsbs-portal>\r\n      <_BottomSheet\r\n        {...props}\r\n        lastSnapRef={lastSnapRef}\r\n        ref={ref}\r\n        initialState={initialStateRef.current}\r\n        onSpringStart={handleSpringStart}\r\n        onSpringEnd={handleSpringEnd}\r\n      />\r\n    </Portal>\r\n  )\r\n})\r\n"],"names":["useLayoutEffect","window","useLayoutEffectSafely","useEffect","clamp","number","lower","upper","roundAndCheckForNaN","unrounded","rounded","Math","round","Number","isNaN","TypeError","observerOptions","box","useElementSizeObserver","ref","label","enabled","resizeSourceRef","size","setSize","useState","useDebugValue","handleResize","useCallback","entries","borderBoxSize","blockSize","current","resizeObserver","ResizeObserver","observe","disconnect","sleep","ms","Promise","resolve","setTimeout","openToDrag","DRAG","target","actions","openToResize","RESIZE","overlayMachine","Machine","id","initial","context","initialState","states","closed","on","OPEN","CLOSE","undefined","opening","start","invoke","src","onDone","transition","always","cond","immediately","open","activating","smoothly","visuallyHidden","end","done","type","SNAP","dragging","snapping","entry","assign","y","_","payload","velocity","snapSource","source","snappingSmoothly","resizing","resizingSmoothly","closing","deactivating","closingSmoothly","onOpenCancel","event","onSnapCancel","onResizeCancel","onCloseCancel","onOpenEnd","onSnapEnd","onRezizeEnd","services","onSnapStart","async","onOpenStart","onCloseStart","onResizeStart","onCloseEnd","onResizeEnd","renderVisuallyHidden","activate","deactivate","openSmoothly","openImmediately","snapSmoothly","resizeSmoothly","closeSmoothly","guards","initiallyClosed","initiallyOpen","tension","friction","config","default","BottomSheet","React","forwardRef","children","sibling","className","topOffset","springConfig","footer","header","_open","lastSnapRef","initialFocusRef","onDismiss","maxHeight","controlledMaxHeight","defaultSnap","getDefaultSnap","_defaultSnap","snapPoints","getSnapPoints","_snapPoints","blocking","scrollLocking","style","onSpringStart","onSpringCancel","onSpringEnd","reserveScrollBarGap","props","ready","registerReady","setReady","readyMap","updateReadyMap","key","[object Object]","Object","values","length","every","Boolean","useReady","canDragRef","useRef","onSpringStartRef","onSpringCancelRef","onSpringEndRef","spring","set","useReactSpring","minSnap","maxSnap","containerRef","scrollRef","contentRef","headerRef","footerRef","overlayRef","heightRef","prefersReducedMotion","mql","useMemo","matchMedia","matches","handler","addListener","removeListener","useReducedMotion","scrollLockRef","targetRef","active","disableBodyScroll","allowTouchMove","el","closest","enableBodyScroll","useScrollLock","ariaHiderRef","originalValues","rootNodes","parentNode","document","querySelectorAll","forEach","node","attr","getAttribute","push","setAttribute","index","originalValue","removeAttribute","useAriaHider","focusTrapRef","fallbackRef","fallback","trap","createFocusTrap","onActivate","initialFocus","fallbackFocus","escapeDeactivates","clickOutsideDeactivates","useFocusTrap","findSnap","footerEnabled","headerEnabled","minHeight","headerHeight","footerHeight","setMaxHeight","innerHeight","raf","requestAnimationFrame","addEventListener","removeEventListener","cancelAnimationFrame","useMaxHeight","contentHeight","min","useDimensions","unsafeSnaps","snapPointsDedupedSet","concat","map","reduce","acc","snapPoint","add","Set","Array","from","max","processSnapPoints","height","numberOrCallback","unsafeSearch","lastSnap","querySnap","prev","curr","abs","useSnapPoints","maxHeightRef","minSnapRef","maxSnapRef","findSnapRef","defaultSnapRef","topOffsetRef","asyncSet","_ref2","onRest","opts","mass","args","send","useMachine","devTools","immediate","all","snap","useImperativeHandle","snapTo","bind","useDrag","closeOnTap","cancel","direction","down","first","last","memo","getValue","movement","_my","tap","my","rawY","predictedDistance","predictedY","newY","rubberbandIfOutOfBounds","filterTaps","interpolations","interpolateBorderRadius","interpolate","interpolateHeight","interpolateY","interpolateFiller","ceil","--rsbs-content-opacity","minX","--rsbs-backdrop-opacity","--rsbs-antigap-scale-y","--rsbs-overlay-translate-y","--rsbs-overlay-rounded","--rsbs-overlay-h","useSpringInterpolations","animated","div","data-rsbs-root","data-rsbs-state","publicStates","find","data-rsbs-is-blocking","data-rsbs-is-dismissable","data-rsbs-has-header","data-rsbs-has-footer","opacity","data-rsbs-backdrop","aria-modal","role","data-rsbs-overlay","tabIndex","onKeyDown","stopPropagation","data-rsbs-header","data-rsbs-scroll","data-rsbs-content","data-rsbs-footer","skipInitialTransition","mounted","setMounted","timerRef","initialStateRef","handleSpringStart","handleSpringEnd","Portal","data-rsbs-portal","_BottomSheet"],"mappings":"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"}